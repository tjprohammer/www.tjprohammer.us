upstream api {
  server api:5005;
}

upstream client {
  server client:3000;
}

upstream portfolio {
  server portfolio:5000;
}


server {
  listen 80;
  server_name domain.us www.domain.us;
  return 301 https://$host$request_uri;

  location /api {
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }

  location / {
    proxy_pass http://client/;
  }

}

server {
    listen 443 ssl;
    server_name domain.us www.domain.us;

    root /usr/share/nginx/html;
    index index.html;

    ssl_certificate         /etc/ssl/certs/key.crt;
    ssl_certificate_key     /etc/ssl/private/key.key;
    ssl_trusted_certificate /etc/ssl/certs/key.crt;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    add_header Strict-Transport-Security "max-age=63072000" always;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    location /api {
      rewrite /api/(.*) /$1 break;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_ssl_certificate       /etc/ssl/certs/key.crt;
      proxy_ssl_certificate_key   /etc/ssl/private/key.key;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_pass http://api;
    }

    location / {
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_ssl_certificate       /etc/ssl/certs/key.crt;
      proxy_ssl_certificate_key   /etc/ssl/private/key.key;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_pass http://client;

    }
}

